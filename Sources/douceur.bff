// Douceur
//------------------------------------------------------------------------------
{
	.ProjectName		= 'Douceur'
	.ProjectPath		= 'Sources'
	.PCHName			= 'DouceurPCH'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '../tmp/VisualStudio/Projects/$ProjectName$.vcxproj'
		.ProjectInputPaths			= '../$ProjectPath$\'
		.ProjectBasePath			= '../Sources/$ProjectPath$\'

		.LocalDebuggerCommand		= '^$(SolutionDir)../../bin/^$(Configuration)/$ProjectName$.exe'
		.LocalDebuggerWorkingDirectory = '^$(SolutionDir)..\..'
	}

	// Unity
	//--------------------------------------------------------------------------
	{
		// Common options
		.UnityInputPath				= { '../Sources/' }
		.UnityOutputPath			= '$OutputBase$\Unity\$ProjectPath$\'


		// Windows
		Unity( '$ProjectName$-Unity-Windows' )
		{
			.UnityPCH				= '$PCHName$.h'
		}

		// Linux
		Unity( '$ProjectName$-Unity-Linux' )
		{
			// No PCH
		}

        // OSX
        Unity( '$ProjectName$-Unity-OSX' )
        {
            // No PCH
        }
	}

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		// Objects
		ObjectList( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'

 			.CompilerOptions    		+ ' /I../../DouceurExternal/Debug/'
 										+ ' /I../../DouceurExternal/Soloud/Include/'

		}

		// Executable
		Executable( '$ProjectName$-Exe-$Platform$-$Config$' )
		{
			.Libraries					= { 'Douceur-Lib-$Platform$-$Config$' }
			.LinkerOutput				= '../bin/$Platform$-$Config$/$ProjectName$.exe'
			.LinkerOptions				+ ' /SUBSYSTEM:CONSOLE'
										+ ' ../lib/$Platform$-$Config$/imgui/imgui.lib'
										+ ' ../lib/$Platform$-$Config$/soloud/soloud.lib'
										+ ' kernel32.lib'
										+ ' Ws2_32.lib'
										+ ' LIBCMT.LIB'
										+ ' User32.lib'
										+ ' d3d11.lib'
										+ ' d3dcompiler.lib'
										+ ' ole32.lib' //soloud
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Exe-$Platform$-$Config$' }
	}

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X86-Debug',   '$ProjectName$-X64-Debug', '$ProjectName$-X86Clang-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X86-Profile', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X86-Release', '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X86' )		{ .Targets = { '$ProjectName$-X86-Debug', '$ProjectName$-X86-Release', '$ProjectName$-X86-Profile' } }
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-X86Clang' )	{ .Targets = { '$ProjectName$-X86Clang-Debug' } }
    Alias( '$ProjectName$-x64Linux' )   { .Targets = { '$ProjectName$-X64Linux-Debug', '$ProjectName$-X64Linux-Release', '$ProjectName$-X64Linux-Profile' } }
    Alias( '$ProjectName$-x64OSX' )     { .Targets = { '$ProjectName$-X64OSX-Debug', '$ProjectName$-X64OSX-Release', '$ProjectName$-X64OSX-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
